3 shift/reduce conflicts

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 68)
error:  state 32: shift/reduce conflict (shift FUNCTION, reduce by rule 59)
error:  state 36: shift/reduce conflict (shift TYPE, reduce by rule 47)

state 0:

	program : . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 5
	program	goto 152
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 1:

	exp : arr_cre .  (reduce by rule 24)



	.	reduce by rule 24


state 2:

	exp : funcal .  (reduce by rule 20)



	.	reduce by rule 20


state 3:

	exp : nonvalue .  (reduce by rule 5)



	.	reduce by rule 5


state 4:

	exp : lvalue .  (reduce by rule 4)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 19
	DOT	shift 18
	ASSIGN	shift 17


	.	reduce by rule 4


state 5:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 0


state 6:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 7:

	exp : BREAK .  (reduce by rule 28)



	.	reduce by rule 28


state 8:

	exp : LET . decs IN END 
	exp : LET . decs IN exp END 
	exp : LET . decs IN expseq END 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 38
	dec	goto 37
	tydec	goto 36
	tydec_list	goto 35
	vardec	goto 34
	fundec_list	goto 33
	fundec	goto 32

	.	reduce by rule 42


state 9:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 42


	.	error


state 10:

	exp : WHILE . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 43
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 11:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 44
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 12:

	exp : MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 45
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 13:

	exp : LPAREN . expseq RPAREN 
	exp : LPAREN . exp RPAREN 
	nonvalue : LPAREN . RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	RPAREN	shift 48
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 47
	lvalue	goto 4
	expseq	goto 46
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 14:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 15:

	exp : INT .  (reduce by rule 2)



	.	reduce by rule 2

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 68)

state 16:

	exp : ID . LBRACE RBRACE 
	exp : ID . LBRACE rec_list RBRACE 
	lvalue : ID .  (reduce by rule 68)
	lvalue : ID . LBRACK exp RBRACK 
	funcal : ID . LPAREN RPAREN 
	funcal : ID . LPAREN args RPAREN 
	arr_cre : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 51
	LBRACK	shift 50
	LBRACE	shift 49


	.	reduce by rule 68


state 17:

	exp : lvalue ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 52
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 18:

	lvalue : lvalue DOT . ID 

	ID	shift 53


	.	error


state 19:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 54
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 20:

	exp : exp OR . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 55
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 21:

	exp : exp AND . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 56
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 22:

	exp : exp GE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 57
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 23:

	exp : exp GT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 58
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 24:

	exp : exp LE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 59
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 25:

	exp : exp LT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 60
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 26:

	exp : exp NEQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 61
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 27:

	exp : exp EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 62
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 28:

	exp : exp DIVIDE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 63
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 29:

	exp : exp TIMES . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 64
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 30:

	exp : exp MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 65
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 31:

	exp : exp PLUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 66
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error

error:  state 32: shift/reduce conflict (shift FUNCTION, reduce by rule 59)

state 32:

	fundec_list : fundec .  (reduce by rule 59)
	fundec_list : fundec . fundec_list 

	FUNCTION	shift 41

	fundec_list	goto 67
	fundec	goto 32

	.	reduce by rule 59


state 33:

	dec : fundec_list .  (reduce by rule 46)



	.	reduce by rule 46


state 34:

	dec : vardec .  (reduce by rule 45)



	.	reduce by rule 45


state 35:

	dec : tydec_list .  (reduce by rule 44)



	.	reduce by rule 44

error:  state 36: shift/reduce conflict (shift TYPE, reduce by rule 47)

state 36:

	tydec_list : tydec .  (reduce by rule 47)
	tydec_list : tydec . tydec_list 

	TYPE	shift 39

	tydec	goto 36
	tydec_list	goto 68

	.	reduce by rule 47


state 37:

	decs : dec . decs 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 69
	dec	goto 37
	tydec	goto 36
	tydec_list	goto 35
	vardec	goto 34
	fundec_list	goto 33
	fundec	goto 32

	.	reduce by rule 42


state 38:

	exp : LET decs . IN END 
	exp : LET decs . IN exp END 
	exp : LET decs . IN expseq END 

	IN	shift 70


	.	error


state 39:

	tydec : TYPE . ID EQ ty 

	ID	shift 71


	.	error


state 40:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON tyid ASSIGN exp 

	ID	shift 72


	.	error


state 41:

	fundec : FUNCTION . ID LPAREN params RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN params RPAREN COLON tyid EQ exp 

	ID	shift 73


	.	error


state 42:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 74


	.	error


state 43:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 75


	.	error


state 44:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	THEN	shift 76


	.	error


state 45:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : MINUS exp .  (reduce by rule 21)



	.	reduce by rule 21


state 46:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 77


	.	error


state 47:

	exp : LPAREN exp . RPAREN 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	expseq : exp . SEMICOLON exp 
	expseq : exp . SEMICOLON expseq 

	SEMICOLON	shift 79
	RPAREN	shift 78
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 48:

	nonvalue : LPAREN RPAREN .  (reduce by rule 34)



	.	reduce by rule 34


state 49:

	exp : ID LBRACE . RBRACE 
	exp : ID LBRACE . rec_list RBRACE 

	ID	shift 82
	RBRACE	shift 81

	rec_list	goto 80

	.	error


state 50:

	lvalue : ID LBRACK . exp RBRACK 
	arr_cre : ID LBRACK . exp RBRACK OF exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 83
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 51:

	funcal : ID LPAREN . RPAREN 
	funcal : ID LPAREN . args RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	RPAREN	shift 86
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 85
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1
	args	goto 84

	.	error


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 25)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 25


state 53:

	lvalue : lvalue DOT ID .  (reduce by rule 69)



	.	reduce by rule 69


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 87
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 13)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21


	.	reduce by rule 13


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 12)
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 12


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 17)
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 17
	COMMA	reduce by rule 17
	SEMICOLON	reduce by rule 17
	RPAREN	reduce by rule 17
	RBRACK	reduce by rule 17
	RBRACE	reduce by rule 17
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 17
	OR	reduce by rule 17
	THEN	reduce by rule 17
	ELSE	reduce by rule 17
	TO	reduce by rule 17
	DO	reduce by rule 17
	IN	reduce by rule 17
	END	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 16)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	RBRACE	reduce by rule 16
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 19)

	EOF	reduce by rule 19
	COMMA	reduce by rule 19
	SEMICOLON	reduce by rule 19
	RPAREN	reduce by rule 19
	RBRACK	reduce by rule 19
	RBRACE	reduce by rule 19
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 19
	OR	reduce by rule 19
	THEN	reduce by rule 19
	ELSE	reduce by rule 19
	TO	reduce by rule 19
	DO	reduce by rule 19
	IN	reduce by rule 19
	END	reduce by rule 19
	FUNCTION	reduce by rule 19
	VAR	reduce by rule 19
	TYPE	reduce by rule 19


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 18)
	exp : exp . LE exp 

	EOF	reduce by rule 18
	COMMA	reduce by rule 18
	SEMICOLON	reduce by rule 18
	RPAREN	reduce by rule 18
	RBRACK	reduce by rule 18
	RBRACE	reduce by rule 18
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 18
	OR	reduce by rule 18
	THEN	reduce by rule 18
	ELSE	reduce by rule 18
	TO	reduce by rule 18
	DO	reduce by rule 18
	IN	reduce by rule 18
	END	reduce by rule 18
	FUNCTION	reduce by rule 18
	VAR	reduce by rule 18
	TYPE	reduce by rule 18


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 15)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 15
	COMMA	reduce by rule 15
	SEMICOLON	reduce by rule 15
	RPAREN	reduce by rule 15
	RBRACK	reduce by rule 15
	RBRACE	reduce by rule 15
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 15
	OR	reduce by rule 15
	THEN	reduce by rule 15
	ELSE	reduce by rule 15
	TO	reduce by rule 15
	DO	reduce by rule 15
	IN	reduce by rule 15
	END	reduce by rule 15
	FUNCTION	reduce by rule 15
	VAR	reduce by rule 15
	TYPE	reduce by rule 15


	.	error


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 14)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 14
	COMMA	reduce by rule 14
	SEMICOLON	reduce by rule 14
	RPAREN	reduce by rule 14
	RBRACK	reduce by rule 14
	RBRACE	reduce by rule 14
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 14
	OR	reduce by rule 14
	THEN	reduce by rule 14
	ELSE	reduce by rule 14
	TO	reduce by rule 14
	DO	reduce by rule 14
	IN	reduce by rule 14
	END	reduce by rule 14
	FUNCTION	reduce by rule 14
	VAR	reduce by rule 14
	TYPE	reduce by rule 14


	.	error


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 11)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 



	.	reduce by rule 11


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 10)
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 



	.	reduce by rule 10


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 9)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 9


state 66:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 8)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 8


state 67:

	fundec_list : fundec fundec_list .  (reduce by rule 60)



	.	reduce by rule 60


state 68:

	tydec_list : tydec tydec_list .  (reduce by rule 48)



	.	reduce by rule 48


state 69:

	decs : dec decs .  (reduce by rule 43)



	.	reduce by rule 43


state 70:

	exp : LET decs IN . END 
	exp : LET decs IN . exp END 
	exp : LET decs IN . expseq END 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	END	shift 90
	BREAK	shift 7
	NIL	shift 6

	exp	goto 89
	lvalue	goto 4
	expseq	goto 88
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 71:

	tydec : TYPE ID . EQ ty 

	EQ	shift 91


	.	error


state 72:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON tyid ASSIGN exp 

	COLON	shift 93
	ASSIGN	shift 92


	.	error


state 73:

	fundec : FUNCTION ID . LPAREN params RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN params RPAREN COLON tyid EQ exp 

	LPAREN	shift 94


	.	error


state 74:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 95
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 75:

	exp : WHILE exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 96
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 76:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 97
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 77:

	exp : LPAREN expseq RPAREN .  (reduce by rule 6)



	.	reduce by rule 6


state 78:

	exp : LPAREN exp RPAREN .  (reduce by rule 7)



	.	reduce by rule 7


state 79:

	expseq : exp SEMICOLON . exp 
	expseq : exp SEMICOLON . expseq 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 99
	lvalue	goto 4
	expseq	goto 98
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 80:

	exp : ID LBRACE rec_list . RBRACE 

	RBRACE	shift 100


	.	error


state 81:

	exp : ID LBRACE RBRACE .  (reduce by rule 22)



	.	reduce by rule 22


state 82:

	rec_list : ID . EQ exp 
	rec_list : ID . EQ exp COMMA rec_list 

	EQ	shift 101


	.	error


state 83:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	lvalue : ID LBRACK exp . RBRACK 
	arr_cre : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 102
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 84:

	funcal : ID LPAREN args . RPAREN 

	RPAREN	shift 103


	.	error


state 85:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	args : exp .  (reduce by rule 37)
	args : exp . COMMA args 

	COMMA	shift 104
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 37


state 86:

	funcal : ID LPAREN RPAREN .  (reduce by rule 35)



	.	reduce by rule 35


state 87:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 70)



	.	reduce by rule 70


state 88:

	exp : LET decs IN expseq . END 

	END	shift 105


	.	error


state 89:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : LET decs IN exp . END 
	expseq : exp . SEMICOLON exp 
	expseq : exp . SEMICOLON expseq 

	SEMICOLON	shift 79
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	END	shift 106


	.	error


state 90:

	exp : LET decs IN END .  (reduce by rule 29)



	.	reduce by rule 29


state 91:

	tydec : TYPE ID EQ . ty 

	ID	shift 110
	LBRACE	shift 109
	ARRAY	shift 108

	ty	goto 107

	.	error


state 92:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 111
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 93:

	vardec : VAR ID COLON . tyid ASSIGN exp 

	ID	shift 113

	tyid	goto 112

	.	error


state 94:

	fundec : FUNCTION ID LPAREN . params RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . params RPAREN COLON tyid EQ exp 

	ID	shift 116

	params_one_or_more	goto 115
	params	goto 114

	.	reduce by rule 63


state 95:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	TO	shift 117


	.	error


state 96:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : WHILE exp DO exp .  (reduce by rule 26)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 26


state 97:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 33)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	ELSE	shift 118


	.	reduce by rule 33


state 98:

	expseq : exp SEMICOLON expseq .  (reduce by rule 73)



	.	reduce by rule 73


state 99:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	expseq : exp . SEMICOLON exp 
	expseq : exp SEMICOLON exp .  (reduce by rule 72)
	expseq : exp . SEMICOLON expseq 

	SEMICOLON	shift 79
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 72


state 100:

	exp : ID LBRACE rec_list RBRACE .  (reduce by rule 23)



	.	reduce by rule 23


state 101:

	rec_list : ID EQ . exp 
	rec_list : ID EQ . exp COMMA rec_list 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 119
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 102:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 71)
	arr_cre : ID LBRACK exp RBRACK . OF exp 

	OF	shift 120


	.	reduce by rule 71


state 103:

	funcal : ID LPAREN args RPAREN .  (reduce by rule 36)



	.	reduce by rule 36


state 104:

	args : exp COMMA . args 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 85
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1
	args	goto 121

	.	error


state 105:

	exp : LET decs IN expseq END .  (reduce by rule 31)



	.	reduce by rule 31


state 106:

	exp : LET decs IN exp END .  (reduce by rule 30)



	.	reduce by rule 30


state 107:

	tydec : TYPE ID EQ ty .  (reduce by rule 49)



	.	reduce by rule 49


state 108:

	ty : ARRAY . OF ID 

	OF	shift 122


	.	error


state 109:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 125

	tyfields	goto 124
	one_or_more	goto 123

	.	reduce by rule 53


state 110:

	ty : ID .  (reduce by rule 50)



	.	reduce by rule 50


state 111:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 57)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 57


state 112:

	vardec : VAR ID COLON tyid . ASSIGN exp 

	ASSIGN	shift 126


	.	error


state 113:

	tyid : ID .  (reduce by rule 67)



	.	reduce by rule 67


state 114:

	fundec : FUNCTION ID LPAREN params . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN params . RPAREN COLON tyid EQ exp 

	RPAREN	shift 127


	.	error


state 115:

	params : params_one_or_more .  (reduce by rule 64)



	.	reduce by rule 64


state 116:

	params_one_or_more : ID . COLON tyid 
	params_one_or_more : ID . COLON tyid COMMA params_one_or_more 

	COLON	shift 128


	.	error


state 117:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 129
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 118:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 130
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 119:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	rec_list : ID EQ exp .  (reduce by rule 39)
	rec_list : ID EQ exp . COMMA rec_list 

	COMMA	shift 131
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 39


state 120:

	arr_cre : ID LBRACK exp RBRACK OF . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 132
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 121:

	args : exp COMMA args .  (reduce by rule 38)



	.	reduce by rule 38


state 122:

	ty : ARRAY OF . ID 

	ID	shift 133


	.	error


state 123:

	tyfields : one_or_more .  (reduce by rule 54)



	.	reduce by rule 54


state 124:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 134


	.	error


state 125:

	one_or_more : ID . COLON tyid 
	one_or_more : ID . COLON tyid COMMA one_or_more 

	COLON	shift 135


	.	error


state 126:

	vardec : VAR ID COLON tyid ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 136
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 127:

	fundec : FUNCTION ID LPAREN params RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN params RPAREN . COLON tyid EQ exp 

	COLON	shift 138
	EQ	shift 137


	.	error


state 128:

	params_one_or_more : ID COLON . tyid 
	params_one_or_more : ID COLON . tyid COMMA params_one_or_more 

	ID	shift 113

	tyid	goto 139

	.	error


state 129:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 140


	.	error


state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 32)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 32


state 131:

	rec_list : ID EQ exp COMMA . rec_list 

	ID	shift 82

	rec_list	goto 141

	.	error


state 132:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	arr_cre : ID LBRACK exp RBRACK OF exp .  (reduce by rule 41)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 41


state 133:

	ty : ARRAY OF ID .  (reduce by rule 52)



	.	reduce by rule 52


state 134:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 51)



	.	reduce by rule 51


state 135:

	one_or_more : ID COLON . tyid 
	one_or_more : ID COLON . tyid COMMA one_or_more 

	ID	shift 113

	tyid	goto 142

	.	error


state 136:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	vardec : VAR ID COLON tyid ASSIGN exp .  (reduce by rule 58)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 58


state 137:

	fundec : FUNCTION ID LPAREN params RPAREN EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 143
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 138:

	fundec : FUNCTION ID LPAREN params RPAREN COLON . tyid EQ exp 

	ID	shift 113

	tyid	goto 144

	.	error


state 139:

	params_one_or_more : ID COLON tyid .  (reduce by rule 65)
	params_one_or_more : ID COLON tyid . COMMA params_one_or_more 

	COMMA	shift 145


	.	reduce by rule 65


state 140:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 146
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 141:

	rec_list : ID EQ exp COMMA rec_list .  (reduce by rule 40)



	.	reduce by rule 40


state 142:

	one_or_more : ID COLON tyid .  (reduce by rule 55)
	one_or_more : ID COLON tyid . COMMA one_or_more 

	COMMA	shift 147


	.	reduce by rule 55


state 143:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	fundec : FUNCTION ID LPAREN params RPAREN EQ exp .  (reduce by rule 61)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 61


state 144:

	fundec : FUNCTION ID LPAREN params RPAREN COLON tyid . EQ exp 

	EQ	shift 148


	.	error


state 145:

	params_one_or_more : ID COLON tyid COMMA . params_one_or_more 

	ID	shift 116

	params_one_or_more	goto 149

	.	error


state 146:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 27)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 27


state 147:

	one_or_more : ID COLON tyid COMMA . one_or_more 

	ID	shift 125

	one_or_more	goto 150

	.	error


state 148:

	fundec : FUNCTION ID LPAREN params RPAREN COLON tyid EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 151
	lvalue	goto 4
	nonvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 149:

	params_one_or_more : ID COLON tyid COMMA params_one_or_more .  (reduce by rule 66)



	.	reduce by rule 66


state 150:

	one_or_more : ID COLON tyid COMMA one_or_more .  (reduce by rule 56)



	.	reduce by rule 56


state 151:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	fundec : FUNCTION ID LPAREN params RPAREN COLON tyid EQ exp .  (reduce by rule 62)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 62


state 152:


	EOF	accept


	.	error

528 of 1039 action table entries left after compaction
217 goto table entries
